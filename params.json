{"body":"# Pimon\r\n\r\n[![Build Status](https://secure.travis-ci.org/pedrocarrico/pimon.png)](http://travis-ci.org/pedrocarrico/pimon) [![Dependency Status](https://gemnasium.com/pedrocarrico/pimon.png?travis)](https://gemnasium.com/pedrocarrico/pimon) [![Code Climate](https://codeclimate.com/badge.png)](https://codeclimate.com/github/pedrocarrico/pimon)\r\n\r\n![Pimon](http://pedrocarrico.net/pimon.jpg \"Pimon\")\r\n\r\n## Description\r\nPimon is a simple server monitor designed for the Raspberry Pi.\r\n\r\n## What do I need to get it to work?\r\n1. Clone this repo: git clone git://github.com/pedrocarrico/pimon.git\r\n2. bundle\r\n3. bin/pimon start # run the sinatra app\r\n4. go to http://localhost:3000 and PROFIT!\r\nOptionally you may install it as a gem and run it, please check \"Installing as a gem\" further down.\r\n\r\n## Configuration\r\nConfiguration is done through a YAML file, you may check some examples on the config directory.\r\n\r\n2. chart - colors for each chart\r\n4. stats_collector - configure number of stats and time period between them\r\n\r\n## Installing as a gem\r\n```\r\ngem install pimon\r\n```\r\nAfter installation just do _pimon start_ and go to http://localhost:3000 and check your stats.\r\nIf you want you may run Pimon with other options:\r\n```\r\nUsage: pimon start|stop [options]\r\nOptions:\r\n    -c, --config CONFIG              YAML configuration file for pimon\r\n    -d, --daemonize                  Run Pimon daemonized in the background\r\n    -e, --environment ENVIRONMENT    Application environment (default: \"development\", options: \"development\", \"production\")\r\n    -i, --interface INTERFACE        Hostname or IP address of the interface to listen on (default: \"localhost\")\r\n    -p, --port PORT                  Port to use (default: 3000)\r\n    -P, --pid PIDFILE                File to store PID (default: /tmp/pimon.pid)\r\n```\r\n(This will only work on your Raspberry Pi and perhaps some other linux distros, check the quirks section for more info).\r\n\r\n## Running tests\r\nTo run the coverage suite:\r\n```\r\nrake coverage:spec\r\n```\r\nResults will be in coverage/index.html directory.\r\n\r\n## Quirks\r\nPimon uses _vmstat_ and _free_ to collect it's stats from the operating system and these are only\r\navailable on operating systems that have the /proc filesystem.  \r\nSo if you want to develop on a Mac you may use the mock implementations that are in the bin directory.  \r\nThe mock implementations are programmed in C and mimic the output of _vmstat_ and _free_.  \r\nThey just change and generate some random values on the observed stats using /dev/urandom.  \r\nTo use them you must first compile them using _make_ and then include the bin directory of this project\r\nin your $PATH to have them available when you run the sinatra application.\r\nThe temperature stat is only available with the latest Raspbian distro (2012-09-18) on your Raspberry Pi and will (may)\r\nnot work if you're developing on other systems.  \r\nPimon only works with Ruby 1.9+, please refer to [my blog](http://blog.pedrocarrico.net/post/29478085586/compiling-and-installing-ruby-on-the-raspberry-pi-using \"Compiling and installing ruby on the raspberry pi using rbenvâ€¦\") for a way to install Ruby 1.9.3 on your Raspberry Pi.\r\n\r\n## Deployment with capistrano\r\nTo deploy on your raspberry pi you just have to have ssh enabled and your keys authorized.  \r\nThen you can deploy with capistrano using:  \r\n```\r\ncap deploy:setup\r\ncap deploy:cold\r\n```\r\n\r\nThis will setup your raspberry pi and deploy the application.  \r\nThe username and password for the basic_auth in the production environment will be asked in the\r\nfirst deploy.\r\nTo start and stop the application you have the usual:  \r\n```\r\ncap deploy:start\r\ncap deploy:stop\r\n```\r\nI would recommend installing as a gem and tweak your own configuration file instead of deploying with capistrano as\r\nthis feature will probably be discontinued in the future.\r\n\r\n## TODO\r\n1. Improve disk stats, have a way of having custom mount points\r\n2. Show uptime\r\n3. Change configuration in realtime\r\n\r\n## Copyright\r\nLicensed under the [WTFPL](http://en.wikipedia.org/wiki/WTFPL \"Do What The Fuck You Want To Public License\") license.\r\n","tagline":"Raspberry pi server monitor","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Pimon"}